Міністерство освіти і науки України 
Харківський національний університет радіоелектроніки 
Факультет комп’ютерних наук


Кафедра програмної інженерії 







ЗВІТ
з лабораторної роботи № 2 
з дисципліни «Скриптові мови програмування» 
 




Виконала
 ст. гр. ПЗПІ-23-2 
Зібницька Марія




Перевірив
ст. викладач кафедри ПІ 
Сокорчук Ігор Петрович 








Харків 2025
1 ІСТОРІЯ ЗМІН
№
	Дата
	Версія звіту
	Опис змін та виправлень
	1
	02.06.2025
	0.1
	Створено розділ «Завдання»
	2
	03.06.2025
	0.1
	Створено розділи: «Опис виконаної роботи», «Висновки», «Додаток А», «Додаток Б»
	

2 ЗАВДАННЯ
Створити консольний застосунок «Продовольчий магазин "Весна"».
Ім'я скрипта: ~/імʼя_облікового_запису-task3.php
Наприклад: ~/pzpi-27-15-shukhevych-roman-task3.php
Програма після запуску повинна вивести на термінал перелік можливих дій:
################################
# ПРОДОВОЛЬЧИЙ МАГАЗИН "ВЕСНА" #
################################
1 Вибрати товари
2 Отримати підсумковий рахунок
3 Налаштувати свій профіль
0 Вийти з програми
Введіть команду: _
Далі програма очікує введення значення з клавіатури. Якщо користувач вводить число, якого немає в списку можливих команд, необхідно вивести повідомлення про помилку і запропонувати користувачу ввести інше число:
Введіть команду: 4
ПОМИЛКА! Введіть правильну команду
1 Вибрати товари
2 Отримати підсумковий рахунок
3 Налаштувати свій профіль
0 Вийти з програми
Введіть команду: _
Щоб розпочати купувати товари, необхідно ввести число «1», після чого користувач повинен потрапити в режим закупівлі товарів.
На екрані має з’явитися перелік продуктів, де кожен рядок складається з номера, назви товару і його вартості, наприклад:
Введіть команду: 1
№  НАЗВА                 ЦІНА
1  Молоко пастеризоване  12
2  Хліб чорний           9
3  Сир білий             21
4  Сметана 20%           25
5  Кефір 1%              19
6  Вода газована         18
7  Печиво "Весна"        14
   -----------
0  ПОВЕРНУТИСЯ
Виберіть товар: _
Щоб купити товар, необхідно ввести його номер.
Після успішної перевірки на існування номера товару в списку, програма має попросити ввести кількість товару:
Виберіть товар: 2
Вибрано: Хліб чорний
Введіть кількість, штук: 1
У КОШИКУ:
НАЗВА        КІЛЬКІСТЬ
Хліб чорний  1
Якщо номер товару і його кількість (менше 100 шт.) були вказані коректно, то товар додається в кошик.
Якщо вказано кількість «0», то товар видаляється з кошика:
Виберіть товар: 2
Вибрано: Хліб чорний
Введіть кількість, штук: 0
ВИДАЛЯЮ З КОШИКА
КОШИК ПОРОЖНІЙ
Далі знову відображається перелік товарів і пропонується купити наступний товар.
Якщо номер товару вказано неправильно, виводиться сповіщення про помилку, нову виводиться перелік товарів:
№  НАЗВА                 ЦІНА
1  Молоко пастеризоване  12
2  Хліб чорний           9
3  Сир білий             21
4  Сметана 20%           25
5  Кефір 1%              19
6  Вода газована         18
7  Печиво "Весна"        14
   -----------
0  ПОВЕРНУТИСЯ
Виберіть товар: 8
ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ
Щоб завершити купувати товари і перейти до попереднього меню, необхідно ввести з клавіатури цифру «0».
Щоб отримати підсумковий рахунок, потрібно ввести число «2».
Рахунок має містити таку інформацію: №, назва, ціна товару, кількість товару, вартість товару. 
У кінці чека має бути: РАЗОМ ДО CПЛАТИ: сума_за_всі_товари
Наприклад:
Введіть команду: 2
№  НАЗВА                 ЦІНА  КІЛЬКІСТЬ  ВАРТІСТЬ
1  Печиво "Весна"        14    1          14
2  Молоко пастеризоване  12    2          24
3  Сметана 20%           25    1          25
4  Хліб чорний           9     1          9
РАЗОМ ДО CПЛАТИ: 72
Щоб встановити свій профіль потрібно, ввести число «3», після чого програма попросить ввести ваше ім'я та ваш вік:
Ваше імʼя: _
Ваш вік: _
Імʼя користувача не може бути порожнім і повинно містити хоча б одну літеру.
Користувач не може бути молодшим 7-ми або старшим 150-ти років
Щоб завершити роботу та вийти з програми, потрібно ввести число «0».
У програмі потрібно перевіряти інформацію, яку вводить користувач, а саме:
* обраний пункт меню існує;
* обраний товар існує;
* введена кількість товару більша нуля;
* імʼя користувача містить хоча б одну літеру;
* вік користувача становить від 7-ми до 150-ти років.


3 ОПИС ВИКОНАНОЇ РОБОТИ
Для зберігання асортименту товарів було використано окремий php-файл products.php, що дозволяє легко модифікувати перелік товарів незалежно від основної логіки програми.
  1 <?php
  2 return [
  3     'Молоко пастеризоване' => 12,
  4     'Хліб чорний' => 9,
  5     'Сир білий' => 21,
  6     'Сметана 20%' => 25,
  7     'Кефір 1%' => 19,
  8     'Вода газована' => 18,
  9     'Печиво "Весна"' => 14
 10 ];
        Основна логіка програми зосереджена у окремому скрипті smp-pzpi-23-2-zibnytska-mariia-lab2-code, де реалізовано меню, функції вибору товарів, обрахунку вартості кошика та налаштування профілю.
На початку скрипта підключається файл product.php, який містить який містить асоціативний масив із переліком товарів та їх цінами. Змінна $cart ініціалізується як порожній масив, який буде використовуватись для зберігання інформації обраних користувачем товари. Змінна $profile – масив для зберігання персональних даних користувача: ім’я та вік.
1 <?php
  2 
  3 $products = include 'data/products.php';
  4 $cart = [];
  5 $profile = ['name' => '', 'age' => 0];
Функція showMenu() виводить головне меню користувача у консолі. 
  7 function showMenu() {
  8     echo "\n################################\n";
  9     echo "# ПРОДОВОЛЬЧИЙ МАГАЗИН \"ВЕСНА\" #\n";
 10     echo "################################\n";
 11     echo "1 Вибрати товари\n";
 12     echo "2 Отримати підсумковий рахунок\n";
 13     echo "3 Налаштувати свій профіль\n";
 14     echo "0 Вийти з програми\n";
 15 }
Функція getUserInput($prompt) використовується для отримання інформації з стандартного потоку введення STDIN від користувача. 
 17 function getUserInput($prompt) {
 18     echo $prompt;
 19     return trim(fgets(STDIN));
 20 }
Функція showProducts($products) відображає список товарів у табличному вигляді. Визначається максимальна довжина назви товару для вирівнювання колонок та записується до змінної $max_name_len та відповідно додаються пробіли для вирівнювання.У функції для визначення довжини використано функцію mb_strlen(), оскільки інформація записана кирилицею і необхідно, щоб коректно була розрахована кількість символів.  Для кожного товару виводиться його порядковий номер, назва та ціна. 
 22 function showProducts($products) {
 23     $max_name_len = max(array_map('mb_strlen', array_keys($products)));
 24 
 25     $label_number = '№';
 26     $label_name = 'НАЗВА';
 27     $label_price = 'ЦІНА';
 28 
 29     $name_padding = $max_name_len - mb_strlen($label_name);
 30     echo $label_number . '  ' . $label_name . str_repeat(' ', $name_padding) . '  ' . $label_price . PHP_EOL;
 31 
 32     $index = 1;
 33     foreach ($products as $name => $price) {
 34         $name_spaces = $max_name_len - mb_strlen($name);
 35         echo $index . '  '
 36             . $name . str_repeat(' ', $name_spaces) . '  '
 37             . $price . PHP_EOL;
 38         $index++;
 39     }
 40     echo "-----------\n";
 41     echo "0  ПОВЕРНУТИСЯ\n";
 42 }
Функція selectProducts(&$cart, $products) забезпечує взаємодію користувача з товарами: вибір товару зі списку, введення кількості та оновлення кошика. Використовується цикл while(true), який дозволяє додавати або видаляти товари до тих пір, поки користувач не обере повернення. Введені дані перевіряються на коректність: номер товару має бути у допустимому діапазоні, кількість — не від’ємна і не більша за 99. Якщо кількість вказана як 0, товар видаляється з кошика за допомогою unset(). Після кожної операції виводиться поточний стан кошика.
 45 function selectProducts(&$cart, $products) {
 46     while (true) {
 47         showProducts($products);
 48         $choice = getUserInput("Виберіть товар: ");
 49 
 50         if (!is_numeric($choice)) continue;
 51         $choice = (int)$choice;
 52 
 53         if ($choice === 0) break;
 54 
 55         if ($choice < 1 || $choice > count($products)) {
 56             echo "ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ\n";
 57             continue;
 58         }
 59 
 60         $productNames = array_keys($products);
 61         $selectedProduct = $productNames[$choice - 1];
 62         echo "Вибрано: $selectedProduct\n";
 63         $quantity = (int)getUserInput("Введіть кількість, штук: ");
 64 
 65         if ($quantity < 0 || $quantity >= 100) {
 66             echo "ПОМИЛКА! Кількість має бути від 0 до 99.\n";
 67             continue;
 68         }
 69 
 70         if ($quantity === 0) {
 71             unset($cart[$selectedProduct]);
 72             echo "ВИДАЛЯЮ З КОШИКА\n";
 73         } else {
 74             $cart[$selectedProduct] = $quantity;
 75             echo "У КОШИКУ:\nНАЗВА            КІЛЬКІСТЬ\n";
 76             foreach ($cart as $name => $qty) {
 77                 echo "$name  $qty\n";
 78             }
 79         }
 80     }
 81 }
Функція showBill($cart, $products) формує та виводить підсумковий рахунок покупок. Якщо кошик порожній — повідомляє про це користувача. Інакше, у табличному форматі відображає список товарів, їх ціну, кількість та вартість. Для кращої читабельності враховується максимальна довжина назв товарів для вирівнювання колонок. Наприкінці виводиться загальна сума до сплати.
 83 function showBill($cart, $products) {
 84     if (empty($cart)) {
 85         echo "КОШИК ПОРОЖНІЙ\n";
 86         return;
 87     }
 88 
 89     $max_name_len = max(array_map('mb_strlen', array_keys($products)));
 90     $label_number = '№';
 91     $label_name = 'НАЗВА';
 92     $label_price = 'ЦІНА';
 93     $label_qty = 'КІЛЬКІСТЬ';
 94     $label_sum = 'ВАРТІСТЬ';
 95 
 96     $name_padding = $max_name_len - mb_strlen($label_name);
 97     echo $label_number . '  ' . $label_name . str_repeat(' ', $name_padding) . '  '
 98         . str_pad($label_price, 5, ' ', STR_PAD_RIGHT) . '  '
 99         . str_pad($label_qty, 9, ' ', STR_PAD_RIGHT) . '  '
100         . str_pad($label_sum, 9, ' ', STR_PAD_RIGHT) . "\n";
101 
102     $index = 1;
103     $total = 0;
104 
105     foreach ($cart as $name => $qty) {
106         $price = $products[$name];
107         $sum = $price * $qty;
108         $name_spaces = $max_name_len - mb_strlen($name);
109 
110         echo str_pad($index, mb_strlen($label_number), ' ', STR_PAD_LEFT) . '  '
111             . $name . str_repeat(' ', $name_spaces) . '  '
112             . str_pad($price, 5, ' ', STR_PAD_RIGHT) . '  '
113             . str_pad($qty, 9, ' ', STR_PAD_RIGHT) . '  '
114             . str_pad($sum, 9, ' ', STR_PAD_RIGHT) . "\n";
115 
116         $total += $sum;
117         $index++;
118     }
119 
120     echo "РАЗОМ ДО CПЛАТИ: $total\n";
121 }
Функція setupProfile(&$profile) реалізує введення та валідацію персональних даних користувача — ім’я і вік. Ім’я має містити хоча б одну літеру (латиниця або кирилиця), вік обмежений діапазоном від 7 до 150 років. У разі некоректного введення виводиться повідомлення про помилку і пропонується повторити спробу. Після успішного вводу дані зберігаються у глобальній змінній $profile та виводяться для підтвердження.
124 function setupProfile(&$profile) {
125     while (true) {
126         $name = getUserInput("Ваше імʼя: ");
127         if (preg_match('/[a-zA-Zа-яА-ЯіІїЇєЄґҐ]/u', $name)) {
128             $profile['name'] = $name;
129             break;
130         }
131         echo "ПОМИЛКА! Імʼя не може бути порожнім і повинно містити хоча б одну літеру.\n";
132     }
133 
134     while (true) {
135         $age = (int)getUserInput("Ваш вік: ");
136         if ($age >= 7 && $age <= 150) {
137             $profile['age'] = $age;
138             break;
139         }
140         echo "ПОМИЛКА! Вік повинен бути від 7 до 150 років.\n";
141     }
142 
143     echo "Профіль оновлено: {$profile['name']}, {$profile['age']} років\n";
144 }
Головний цикл програми, який забезпечує інтерактивність та повторюваність дій користувача. На кожній ітерації виводиться меню, зчитується команда і виконується відповідна функція. В разі некоректного вводу видається повідомлення про помилку та пропонується повторити дію.
146 while (true) {
147     showMenu();
148     $command = getUserInput("Введіть команду: ");
149 
150     switch ($command) {
151         case '1':
152             selectProducts($cart, $products);
153             break;
154         case '2':
155             showBill($cart, $products);
156             break;
157         case '3':
158             setupProfile($profile);
159             break;
160         case '0':
161             echo "Дякуємо за покупки!\n";
162             exit;
163         default:
164             echo "ПОМИЛКА! Введіть правильну команду\n";
165     }
166 }


4 ВИСНОВКИ
У результаті виконання лабораторної роботи було створено прототип консольного застосунку мовою PHP, який імітує інтерфейс продовольчого магазину “Весна”. У процесі виконання лабораторної роботи було отримано навички використання різноманітних елементів мови PHP, зокрема роботи з користувацькими функціями, циклами foreach, підключенням зовнішніх файлів за допомогою команди include, а також обробки й форматування асоціативних масивів. Крім того, було засвоєно принципи динамічного форматування виводу даних. Реалізована програма відповідає поставленим вимогам — забезпечує вивід меню, відображення товарів із коректним вирівнюванням, а також готує основу для подальшої розробки функцій вибору товарів, формування чека та налаштування профілю користувача.
ДОДАТОК А
Відеозапис
Відеозапис презентації результатів лабораторної роботи: https://youtu.be/XWKkg0kOulA 


Хронологічний опис відеозапису:
00:00 - вступ
00:08 - завдання лабораторної роботи
00:30 - результати виконання скрипта
02:05 - реалізація коду. Змінні для збереження даних
02:36 - реалізація коду. Функції
06:36 - висновки


ДОДАТОК Б
Програмний код 
Б.1 data/products.php
GitHub репозиторій: https://github.com/NureZibnytskaMariia/smp-pzpi-23-2-zibnytska-mariia/blob/main/Lab2/smp-pzpi-23-2-zibnytska-mariia-lab2/data/products.php 


  1 <?php
  2 return [
  3     'Молоко пастеризоване' => 12,
  4     'Хліб чорний' => 9,
  5     'Сир білий' => 21,
  6     'Сметана 20%' => 25,
  7     'Кефір 1%' => 19,
  8     'Вода газована' => 18,
  9     'Печиво "Весна"' => 14
 10 ];


Б.2 smp-pzpi-23-2-zibnytska-mariia-lab2-code
GitHub репозиторій: https://github.com/NureZibnytskaMariia/smp-pzpi-23-2-zibnytska-mariia/blob/main/Lab2/smp-pzpi-23-2-zibnytska-mariia-lab2/smp-pzpi-23-2-zibnytska-mariia-lab2-code 


  1 <?php
  2 
  3 $products = include 'data/products.php';
  4 $cart = [];
  5 $profile = ['name' => '', 'age' => 0];
  6 
  7 function showMenu() {
  8     echo "\n################################\n";
  9     echo "# ПРОДОВОЛЬЧИЙ МАГАЗИН \"ВЕСНА\" #\n";
 10     echo "################################\n";
 11     echo "1 Вибрати товари\n";
 12     echo "2 Отримати підсумковий рахунок\n";
 13     echo "3 Налаштувати свій профіль\n";
 14     echo "0 Вийти з програми\n";
 15 }
 16 
 17 function getUserInput($prompt) {
 18     echo $prompt;
 19     return trim(fgets(STDIN));
 20 }
 21 
 22 function showProducts($products) {
 23     $max_name_len = max(array_map('mb_strlen', array_keys($products)));
 24 
 25     $label_number = '№';
 26     $label_name = 'НАЗВА';
 27     $label_price = 'ЦІНА';
 28 
 29     $name_padding = $max_name_len - mb_strlen($label_name);
 30     echo $label_number . '  ' . $label_name . str_repeat(' ', $name_padding) . '  ' . $label_price . PHP_EOL;
 31 
 32     $index = 1;
 33     foreach ($products as $name => $price) {
 34         $name_spaces = $max_name_len - mb_strlen($name);
 35         echo $index . '  '
 36             . $name . str_repeat(' ', $name_spaces) . '  '
 37             . $price . PHP_EOL;
 38         $index++;
 39     }
 40     echo "-----------\n";
 41     echo "0  ПОВЕРНУТИСЯ\n";
 42 }
 43 
 44 
 45 function selectProducts(&$cart, $products) {
 46     while (true) {
 47         showProducts($products);
 48         $choice = getUserInput("Виберіть товар: ");
 49 
 50         if (!is_numeric($choice)) continue;
 51         $choice = (int)$choice;
 52 
 53         if ($choice === 0) break;
 54 
 55         if ($choice < 1 || $choice > count($products)) {
 56             echo "ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ\n";
 57             continue;
 58         }
 59 
 60         $productNames = array_keys($products);
 61         $selectedProduct = $productNames[$choice - 1];
 62         echo "Вибрано: $selectedProduct\n";
 63         $quantity = (int)getUserInput("Введіть кількість, штук: ");
 64 
 65         if ($quantity < 0 || $quantity >= 100) {
 66             echo "ПОМИЛКА! Кількість має бути від 0 до 99.\n";
 67             continue;
 68         }
 69 
 70         if ($quantity === 0) {
 71             unset($cart[$selectedProduct]);
 72             echo "ВИДАЛЯЮ З КОШИКА\n";
 73         } else {
 74             $cart[$selectedProduct] = $quantity;
 75             echo "У КОШИКУ:\nНАЗВА            КІЛЬКІСТЬ\n";
 76             foreach ($cart as $name => $qty) {
 77                 echo "$name  $qty\n";
 78             }
 79         }
 80     }
 81 }
 82 
 83 function showBill($cart, $products) {
 84     if (empty($cart)) {
 85         echo "КОШИК ПОРОЖНІЙ\n";
 86         return;
 87     }
 88 
 89     $max_name_len = max(array_map('mb_strlen', array_keys($products)));
 90     $label_number = '№';
 91     $label_name = 'НАЗВА';
 92     $label_price = 'ЦІНА';
 93     $label_qty = 'КІЛЬКІСТЬ';
 94     $label_sum = 'ВАРТІСТЬ';
 95 
 96     $name_padding = $max_name_len - mb_strlen($label_name);
 97     echo $label_number . '  ' . $label_name . str_repeat(' ', $name_padding) . '  '
 98         . str_pad($label_price, 5, ' ', STR_PAD_RIGHT) . '  '
 99         . str_pad($label_qty, 9, ' ', STR_PAD_RIGHT) . '  '
100         . str_pad($label_sum, 9, ' ', STR_PAD_RIGHT) . "\n";
101 
102     $index = 1;
103     $total = 0;
104 
105     foreach ($cart as $name => $qty) {
106         $price = $products[$name];
107         $sum = $price * $qty;
108         $name_spaces = $max_name_len - mb_strlen($name);
109 
110         echo str_pad($index, mb_strlen($label_number), ' ', STR_PAD_LEFT) . '  '
111             . $name . str_repeat(' ', $name_spaces) . '  '
112             . str_pad($price, 5, ' ', STR_PAD_RIGHT) . '  '
113             . str_pad($qty, 9, ' ', STR_PAD_RIGHT) . '  '
114             . str_pad($sum, 9, ' ', STR_PAD_RIGHT) . "\n";
115 
116         $total += $sum;
117         $index++;
118     }
119 
120     echo "РАЗОМ ДО CПЛАТИ: $total\n";
121 }
122 
123 
124 function setupProfile(&$profile) {
125     while (true) {
126         $name = getUserInput("Ваше імʼя: ");
127         if (preg_match('/[a-zA-Zа-яА-ЯіІїЇєЄґҐ]/u', $name)) {
128             $profile['name'] = $name;
129             break;
130         }
131         echo "ПОМИЛКА! Імʼя не може бути порожнім і повинно містити хоча б одну літеру.\n";
132     }
133 
134     while (true) {
135         $age = (int)getUserInput("Ваш вік: ");
136         if ($age >= 7 && $age <= 150) {
137             $profile['age'] = $age;
138             break;
139         }
140         echo "ПОМИЛКА! Вік повинен бути від 7 до 150 років.\n";
141     }
142 
143     echo "Профіль оновлено: {$profile['name']}, {$profile['age']} років\n";
144 }
145 
146 while (true) {
147     showMenu();
148     $command = getUserInput("Введіть команду: ");
149 
150     switch ($command) {
151         case '1':
152             selectProducts($cart, $products);
153             break;
154         case '2':
155             showBill($cart, $products);
156             break;
157         case '3':
158             setupProfile($profile);
159             break;
160         case '0':
161             echo "Дякуємо за покупки!\n";
162             exit;
163         default:
164             echo "ПОМИЛКА! Введіть правильну команду\n";
165     }
166 }